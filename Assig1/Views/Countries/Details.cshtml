@model Assig1.Models.Country

@{
    ViewData["Title"] = "Country Details";
}

<h1>Details</h1>

<!--Variables to store Emission & temperature details(min, max, avg) -->
@{
    var avgEmission = Model.CountryEmissions.Average(e => e.Value);
    var maxEmission = Model.CountryEmissions.Max(e => e.Value);
    var minEmission = Model.CountryEmissions.Min(e => e.Value);

    var avgTemperature = Model.TemperatureData.Average(t => t.Value);
    var maxTemperature = Model.TemperatureData.Max(t => t.Value);
    var minTemperature = Model.TemperatureData.Min(t => t.Value);
}

<!-- Country Details represented in a Bootstrap Card -->
<div class="card mb-4">
    <!--Display Country name-->
    <div class="card-header">
        <h2>@Model.CountryName</h2>
    </div>
    <!--Display Country image-->
    <div class="card-body d-flex justify-content-center">
        <img src="@Model.ImageUrl" alt="@Model.CountryName" class="img-fluid" style="max-width: 400px;">
    </div>
    <!--Display Region the country is from-->
    <div class="card-footer">
        <p>Region: @(Model.Region?.RegionName ?? "Not Available")</p>
    </div>
</div>

<!--Displaying Emissons and Temprature -->
<!--Use a table to display the following data-->
<table class="table table-striped">
    <tr>
        <th>Year</th>
        <th>Temperature Change</th>
        <th>Temperature Value</th>
    </tr>

    <!-- For each loop that iterates through a 
    sorted list of unique years from two different data sources 
    (CountryEmissions and TemperatureData) in ascending order and display data for each year.-->
    @foreach (var year in Model.CountryEmissions.Select(e => e.Year.GetValueOrDefault())
            .Union(Model.TemperatureData
            .Select(t => t.Year))
            .Distinct()
            .OrderBy(y => y))
    {

        //Variable to hold emissons data
         var emissionForYear = Model.CountryEmissions.FirstOrDefault(e => e.Year == year);

         //Variable to hold temperature data
            var temperatureForYear = Model.TemperatureData.FirstOrDefault(t => t.Year == year);
            <tr>
                <td>@year</td>
                <td>@temperatureForYear?.Change</td>
                <td>@temperatureForYear?.Value</td>
            </tr>
        
    }

</table>


<!-- Buttons to view cities and return to the country list -->
<div class="d-flex justify-content-between mt-4">
    <a asp-controller="Cities" asp-action="Index" asp-route-countryID="@Model.CountryId" class="btn btn-primary">View Cities</a>
    <a asp-controller="Countries" asp-action="Index" asp-route-id="@Model.RegionId" class="btn btn-secondary">Back to Countries List</a>
</div>

