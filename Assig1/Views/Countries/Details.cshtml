@model Assig1.ViewModels.CountryDetailsViewModel

@{
    ViewData["Title"] = "Country Details";
}

<h1>Details</h1>



<!-- Country Details represented in a Bootstrap Card -->
<div class="card mb-4">
    <!--Display Country name-->
    <div class="card-header">
        <h2>@Model.CountryName</h2>
    </div>
    <!--Display Country image-->
    <div class="card-body d-flex justify-content-center">
        <img src="@Model.ImageUrl" alt="@Model.CountryName" class="img-fluid" style="max-width: 400px;">
    </div>
    <!--Display Region the country is from-->
    <div class="card-footer">
        <p>Region: @(Model.RegionName ?? "No region data available")</p>
    </div>
</div>


<!-- Aggregate Data summary for Emissions and Temperature -->
<div class="card mt-4 mb-4">

    <div class="card-header">

        <h3>Summary Data</h3>

    </div>
    
    <div class ="card-body">

        <div class="row">

            <div class="col-md-5">
                <!--Diaplaying Emission Data-->
                <h5 class="text-primary">Emission Data:</h5>

                <p><strong>Average Emission:</strong> @(Model.AvgEmission.HasValue ? Model.AvgEmission.Value.ToString("F2") : "Not Available")</p>
                <p><strong>Max Emission:</strong> @(Model.MaxEmission.HasValue ? Model.MaxEmission.Value.ToString("F2") : "Not Available")</p>
                <p><strong>Min Emission:</strong> @(Model.MinEmission.HasValue ? Model.MinEmission.Value.ToString("F2") : "Not Available")</p>

            </div>

            <div class="col-md-5 offset-md-1">
                <!--Diaplaying Temperature Data-->
                <h5 class="text-primary">Temperature Data:</h5>

                <p><strong>Average Temperature:</strong> @(Model.AvgTemperature.HasValue ? $"{Model.AvgTemperature.Value:F2} °C" : "Not Available")</p>
                <p><strong>Max Temperature:</strong> @(Model.MaxTemperature.HasValue ? $"{Model.MaxTemperature.Value:F2} °C" : "Not Available")</p>
                <p><strong>Min Temperature:</strong> @(Model.MinTemperature.HasValue ? $"{Model.MinTemperature.Value:F2} °C" : "Not Available")</p>

            </div>

        </div>

    </div>

</div>

<!-- Buttons to view cities and return to the country list -->
<div class="d-flex justify-content-center mt-4 mb-4">
    <a asp-controller="Cities" asp-action="Index" asp-route-countryID="@Model.CountryId" class="btn btn-primary mr-3">View Cities</a>
    <a asp-controller="Countries" asp-action="Index" asp-route-id="@Model.RegionId" class="btn btn-secondary">Back to Countries List</a>
</div>

<!--Displaying the Temperature data and Emissions data in seperate tables side by side -->
<div class="row">

    <div class="col-md-6">

        <h3 style="color:red;">Emission data</h3>

        <table class="table table-striped" >

            <tr>
                <th>Year</th>
                <th>Emission Type</th>
                <th>Value</th>
            </tr>

            <!--Check for emission in the model-->
            @if (Model.CountryEmissions.Any())

            {
                <!--Order the available emission data by year -->
                foreach (var emission in Model.CountryEmissions.OrderBy(t => t.Year))

                {
                    //Display the emision year, the type of emission, and the emission value
                    <tr>
                        <td>@emission.Year</td>
                        <td>@emission.ItemName</td>
                        <td>@(emission.Value.HasValue ? emission.Value.Value.ToString("F2") : "Not Available")</td>

                    </tr>

                }

            }
            else
            {
                <tr>
                    <td colspan="3">No data available</td>
                </tr>

            }

        </table>

   </div>


   <div class="col-md-6">

        <!--Displaying Temperature data in the table-->
        <h3 style="color:red;">Temperature Data</h3>

        <table class="table table-striped" >

            <tr>
                <th>Year</th>
                <th>Temperature Change</th>
                <th>Temperature Value</th>
            </tr>

            <!--Check for temperature in the model-->
            @if (Model.TemperatureData.Any())

            {
                <!--Order the available temperature data by year -->
                foreach (var temp in Model.TemperatureData.OrderBy(t => t.Year))

                {
                    <tr>
                        <td>@temp.Year</td>
                        <td>@(string.IsNullOrEmpty(temp.Change) ? "Not Available" : temp.Change)</td>
                        <td>@(temp.Value.HasValue ? $"{temp.Value.Value:F2} °C" : "Not Available")</td>

                    </tr>


                }

            }
            else
            {
                <tr>
                    <td colspan="3">No data available</td>
                </tr>

            }

        </table>    

       

   </div>
 

</div>




